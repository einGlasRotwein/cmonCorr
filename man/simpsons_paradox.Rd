% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simpsons_paradox.R
\name{simpsons_paradox}
\alias{simpsons_paradox}
\title{Create a Simpson's Paradox}
\usage{
simpsons_paradox(r_tot, r_sub, ngroups = NULL, nsubgroups = 50,
  means_subgroups = NULL, sd_subgroups = 1, sd_subgroups_y = NULL,
  scaling = 1, ymin = NULL)
}
\arguments{
\item{r_tot}{Desired Pearson correlation of the overall data. Will
not always be met, see details.}

\item{r_sub}{Pearson correlation within the subgroups.}

\item{ngroups}{Number of subgroups present in the data. Must not be
provided when a vector of subgroup means is used
instead (see \code{means_subgroups} and details).}

\item{nsubgroups}{Number of cases in each subgroup. Defaults to 50.}

\item{means_subgroups}{A vector providing the x-mean for each subgroup.
Must not be used when \code{ngroups} is used
instead (see details).}

\item{sd_subgroups}{Standard deviation for the x value of each subgroup.
Can be either a vector containing standard
deviations for each subgroup or an integer. In the
latter case, each subgroup will have the standard
deviation specified by the integer. Defaults to
sd = 1 for each group.}

\item{sd_subgroups_y}{Standard deviation for the y value of each subgroup.
Can be either a vector containing standard
deviations for each subgroup or an integer. In the
latter case, each subgroup will have the standard
deviation specified by the integer. Per default
identical to \code{sd_subgroups}.}

\item{scaling}{Optional argument determining how much the y-coordinates of
subgroups shold be shifted in order to create the desired
overall correlation. The larger \code{scaling} is, the larger
will be the overall correlation. That is, if scaling is set
to 0, the subgroup coordinates will not be shifted at all.
Note that the presence of subgroups will be easier to detect
if \code{scaling} is large. Still, the actual overall will be
smaller than specified in \code{r_tot}. Defaults to 1.}

\item{ymin}{Optional argument determining the smalles y-coordinate present
in your data.}
}
\description{
Create a Simpson's Paradox
}
\details{
Creates a Simpson's Paradox by creating a correlation within a number of
subgroups and then altering the groups' y-coordinates to create a
correlation of the overall data. For the first step, the function
\code{\link{sim_cor_param}} is used. The second step relies on the
function \code{\link{sim_cor_vec}}. If the two correlations specified for
each step (\code{r_sub} and \code{r_tot}, respectively) have opposite
directions, a Simpson's Paradox is created.

One of either \code{ngroups} or \code{mean_subgroups} needs to be provided.
That is, if the number of subgroups is specified via \code{ngroups}, the
x-means for each group will be \code{1:ngroups}. If the x-means for each
subgroup are specified via the vector \code{means_subgroups}, the number
of subgroups equals the number of means provided in the
\code{means_subgroups}. Note that you cannot specify the y-means of each
group since they will be altered in order to create the desired overall
correlation. You can, however, specify the smallest y-coordinate present
in your data via \code{ymin}. All data points will be shifted along the
y-axis, perserving the correlations of the overall data and the subgroups.
That way, you have some degree of control over the range of the y-axis.

Based on linear correlations (pearson).

Returns a \code{data.frame} that holds the x and y coordinates of the
data, a \code{group} column containing the subgroup each case belongs
to and the correlation within each subgroup.

Note that due to the correlations within subgroups, the overall
correlation as specified in \code{r_tot} will not always be achieved.
You can toy around with the group mean parameters and the scaling to
get more satisfying results, but when subgroup correlations and
overall correlation differ widely, this will be harder to achieve.
In this case, the presence of subgroups will usually also be easier
to detect in the visualisation of the data.

If you want to target the correlation between subgroup means, use
\code{\link{simpsons_mean}}.
}
\examples{

simpson <- simpsons_paradox(r_tot = -.8, r_sub = .4, ngroups = 5, nsubgroups = 40,
                            scaling = 2)

simpson2 <- simpsons_paradox(r_tot = .4, r_sub = .-7, ngroups = 4, nsubgroups = 100,
                             scaling = 3, ymin = 10)

}
\author{
Juli Tkotz \email{juliane.tkotz@hhu.de}
}
