% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim_cor_param.R
\name{sim_cor_param}
\alias{sim_cor_param}
\title{Create correlation of specified size (parameter input)}
\usage{
sim_cor_param(N, dist, arglist, r, shuffles = 1000, dist2 = NULL,
  arglist2 = NULL)
}
\arguments{
\item{N}{Size of the two vectors to be created.}

\item{dist}{A character string determining the distribution the first
vector should be sampled from. Can be set to 'normal' or 'unif'. See
details.}

\item{arglist}{A list of arguments provided to the distribution function
that is used to create the first vector. See details.}

\item{r}{Desired size of the correlation. Only takes values between -1
and 1.}

\item{shuffles}{Specifies how many times vector2 should be shuffled at
every step of the function. Defaults to 1000.}

\item{dist2}{A character string determining the distribution the second
vector should be sampled from. Can be set to 'normal' or 'unif'.
See details. If not provided, the same distribution as for the first
vector is used.}

\item{arglist2}{Optional: a list of arguments provided to the
distribution function that is used to create the second
vector. See details. If not provided, the same parameters
as for the first vector are used.}
}
\description{
Create correlation of specified size (parameter input)
}
\details{
Reshuffles a vector until a correlation of desired size with another vector
is created. Does so by taking the shuffled version of the vector that comes
closest to the desired correlation, then only reshuffles part of the data,
depending on how close to a sufficient solution the result is.

Returns the two vectors with the desired correlation (one left untouched),
the other reshuffled along with additional information like mean and SD of
the two vectors as well as the desired and actual correlation.

Based on linear correlations (pearson).

Vectors of a desired size are drawn from a specified distribution.
Parameters for the distribution like mean, standard deviation or min/max
are provided as arguments in a list. Experimental danger zone, as there
will not always be error messages when parameters in arglist are not provided
correctly. When in doubt, generate vectors to be correlated outside the function
and then use \code{\link{sim_cor_vec}}.

Distributions to choose from

- standard normal distribution as implemented in \code{rnorm} (\code{dist =
'normal'}). See \code{\link{rnorm}} for possible arguments to be passed
in \code{arglist}.

- uniform distribution as implemented in \code{runif} (\code{dist =
'unif'}). See \code{\link{runif}} for possible arguments to be passed
in \code{arglist}.
}
\examples{

cor.52 <- sim_cor_param(100, "normal", list(mean = 10, sd = 1),
                        r = .52, shuffles = 1000)

cor.8 <- sim_cor_param(100, "normal", list(mean = 10, sd = 1),
                        r = -.8, shuffles = 100,
                        "unif", list(min = 1, max = 2))

}
\author{
Juli Tkotz \email{juliane.tkotz@hhu.de}
}
